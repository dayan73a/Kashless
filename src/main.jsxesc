≈// === DEBUG DIAGNÓSTICO ===
console.log('🔍 MAIN.JSX INICIADO');
console.log('📍 URL:', window.location.href);
console.log('📁 Ruta actual:', window.location.pathname);

// Verificar que Capacitor está cargado
if (window.Capacitor) {
  console.log('✅ Capacitor detectado');
} else {
  console.log('❌ Capacitor NO detectado');
}

// Verificar variables globales
if (typeof global === 'undefined') {
  window.global = window;
  console.log('🔧 global polyfilled');
}

if (typeof process === 'undefined') {
  window.process = { env: {} };
  console.log('🔧 process polyfilled');
}
// === FIN DEBUG ===

// Tu código original continúa aquí...
import React from 'react'
// ...
// src/main.jsx (o el que sea tu entry)
import React, { useEffect } from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'
import './index.css'
import { AppProvider } from './context/AppContext'
import { ensureSignedIn } from './firebase'
import { HashRouter } from 'react-router-dom' // usa HashRouter en nativo siempre

function Root() {
  useEffect(() => {
    // inicia sesión en segundo plano; si falla, solo loguea
    ensureSignedIn().catch(e => console.warn('Sign-in skipped:', e))
  }, [])
  return (
    <React.StrictMode>
      <HashRouter>
        <AppProvider>
          <App />
        </AppProvider>
      </HashRouter>
    </React.StrictMode>
  )
}

ReactDOM.createRoot(document.getElementById('root')).render(<Root />)
